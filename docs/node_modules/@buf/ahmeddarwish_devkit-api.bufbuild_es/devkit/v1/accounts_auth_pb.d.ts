// @generated by protoc-gen-es v2.2.2 with parameter "import_extension=js"
// @generated from file devkit/v1/accounts_auth.proto (package devkit.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { AccountsSchemaUser } from "./accounts_user_pb.js";

/**
 * Describes the file devkit/v1/accounts_auth.proto.
 */
export declare const file_devkit_v1_accounts_auth: GenFile;

/**
 * @generated from message devkit.v1.AuthLoginRequest
 */
export declare type AuthLoginRequest = Message<"devkit.v1.AuthLoginRequest"> & {
  /**
   * @generated from field: string login_code = 1;
   */
  loginCode: string;

  /**
   * @generated from field: string user_password = 2;
   */
  userPassword: string;
};

/**
 * Describes the message devkit.v1.AuthLoginRequest.
 * Use `create(AuthLoginRequestSchema)` to create a new message.
 */
export declare const AuthLoginRequestSchema: GenMessage<AuthLoginRequest>;

/**
 * @generated from message devkit.v1.LoginInfo
 */
export declare type LoginInfo = Message<"devkit.v1.LoginInfo"> & {
  /**
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * @generated from field: string access_token_expires_at = 4;
   */
  accessTokenExpiresAt: string;
};

/**
 * Describes the message devkit.v1.LoginInfo.
 * Use `create(LoginInfoSchema)` to create a new message.
 */
export declare const LoginInfoSchema: GenMessage<LoginInfo>;

/**
 * @generated from message devkit.v1.NavigationBarItem
 */
export declare type NavigationBarItem = Message<"devkit.v1.NavigationBarItem"> & {
  /**
   * @generated from field: int32 navigation_bar_item_id = 8;
   */
  navigationBarItemId: number;

  /**
   * @generated from field: int32 parent_id = 9;
   */
  parentId: number;

  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string label = 2;
   */
  label: string;

  /**
   * @generated from field: string label_ar = 3;
   */
  labelAr: string;

  /**
   * @generated from field: string icon = 4;
   */
  icon: string;

  /**
   * @generated from field: string route = 5;
   */
  route: string;

  /**
   * @generated from field: int32 level = 7;
   */
  level: number;

  /**
   * @generated from field: repeated devkit.v1.NavigationBarItem items = 6;
   */
  items: NavigationBarItem[];
};

/**
 * Describes the message devkit.v1.NavigationBarItem.
 * Use `create(NavigationBarItemSchema)` to create a new message.
 */
export declare const NavigationBarItemSchema: GenMessage<NavigationBarItem>;

/**
 * @generated from message devkit.v1.AuthLoginResponse
 */
export declare type AuthLoginResponse = Message<"devkit.v1.AuthLoginResponse"> & {
  /**
   * @generated from field: devkit.v1.AccountsSchemaUser user = 1;
   */
  user?: AccountsSchemaUser;

  /**
   * @generated from field: devkit.v1.LoginInfo login_info = 2;
   */
  loginInfo?: LoginInfo;

  /**
   * @generated from field: repeated devkit.v1.NavigationBarItem navigation_bar = 3;
   */
  navigationBar: NavigationBarItem[];
};

/**
 * Describes the message devkit.v1.AuthLoginResponse.
 * Use `create(AuthLoginResponseSchema)` to create a new message.
 */
export declare const AuthLoginResponseSchema: GenMessage<AuthLoginResponse>;

/**
 * @generated from message devkit.v1.AuthRegisterRequest
 */
export declare type AuthRegisterRequest = Message<"devkit.v1.AuthRegisterRequest"> & {
  /**
   * User's name with validation
   *
   * @generated from field: string user_name = 2;
   */
  userName: string;

  /**
   * Security level of the user (non-nullable in DB)
   *
   * @generated from field: int32 user_security_level = 3;
   */
  userSecurityLevel: number;

  /**
   * Foreign key for the user type (validated for presence)
   *
   * @generated from field: int32 user_type_id = 4;
   */
  userTypeId: number;

  /**
   * @generated from field: string user_phone = 5;
   */
  userPhone: string;

  /**
   * Email, validated and unique
   *
   * @generated from field: string user_email = 6;
   */
  userEmail: string;

  /**
   * @generated from field: string user_password = 7;
   */
  userPassword: string;
};

/**
 * Describes the message devkit.v1.AuthRegisterRequest.
 * Use `create(AuthRegisterRequestSchema)` to create a new message.
 */
export declare const AuthRegisterRequestSchema: GenMessage<AuthRegisterRequest>;

/**
 * @generated from message devkit.v1.AuthRegisterResponse
 */
export declare type AuthRegisterResponse = Message<"devkit.v1.AuthRegisterResponse"> & {
  /**
   * @generated from field: devkit.v1.AccountsSchemaUser user = 1;
   */
  user?: AccountsSchemaUser;

  /**
   * @generated from field: devkit.v1.LoginInfo login_info = 2;
   */
  loginInfo?: LoginInfo;
};

/**
 * Describes the message devkit.v1.AuthRegisterResponse.
 * Use `create(AuthRegisterResponseSchema)` to create a new message.
 */
export declare const AuthRegisterResponseSchema: GenMessage<AuthRegisterResponse>;

/**
 * @generated from message devkit.v1.AuthAuthorizeRequest
 */
export declare type AuthAuthorizeRequest = Message<"devkit.v1.AuthAuthorizeRequest"> & {
};

/**
 * Describes the message devkit.v1.AuthAuthorizeRequest.
 * Use `create(AuthAuthorizeRequestSchema)` to create a new message.
 */
export declare const AuthAuthorizeRequestSchema: GenMessage<AuthAuthorizeRequest>;

/**
 * @generated from message devkit.v1.AuthAuthorizeResponse
 */
export declare type AuthAuthorizeResponse = Message<"devkit.v1.AuthAuthorizeResponse"> & {
  /**
   * @generated from field: devkit.v1.AccountsSchemaUser user = 1;
   */
  user?: AccountsSchemaUser;
};

/**
 * Describes the message devkit.v1.AuthAuthorizeResponse.
 * Use `create(AuthAuthorizeResponseSchema)` to create a new message.
 */
export declare const AuthAuthorizeResponseSchema: GenMessage<AuthAuthorizeResponse>;

/**
 * @generated from message devkit.v1.AuthInviteRequest
 */
export declare type AuthInviteRequest = Message<"devkit.v1.AuthInviteRequest"> & {
  /**
   * @generated from field: string user_email = 1;
   */
  userEmail: string;
};

/**
 * Describes the message devkit.v1.AuthInviteRequest.
 * Use `create(AuthInviteRequestSchema)` to create a new message.
 */
export declare const AuthInviteRequestSchema: GenMessage<AuthInviteRequest>;

/**
 * @generated from message devkit.v1.AuthInviteResponse
 */
export declare type AuthInviteResponse = Message<"devkit.v1.AuthInviteResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message devkit.v1.AuthInviteResponse.
 * Use `create(AuthInviteResponseSchema)` to create a new message.
 */
export declare const AuthInviteResponseSchema: GenMessage<AuthInviteResponse>;

/**
 * @generated from message devkit.v1.AuthLoginProviderRequest
 */
export declare type AuthLoginProviderRequest = Message<"devkit.v1.AuthLoginProviderRequest"> & {
  /**
   * @generated from field: string provider = 2;
   */
  provider: string;

  /**
   * @generated from field: string redirect_url = 1;
   */
  redirectUrl: string;
};

/**
 * Describes the message devkit.v1.AuthLoginProviderRequest.
 * Use `create(AuthLoginProviderRequestSchema)` to create a new message.
 */
export declare const AuthLoginProviderRequestSchema: GenMessage<AuthLoginProviderRequest>;

/**
 * @generated from message devkit.v1.AuthLoginProviderResponse
 */
export declare type AuthLoginProviderResponse = Message<"devkit.v1.AuthLoginProviderResponse"> & {
  /**
   * @generated from field: string url = 1;
   */
  url: string;
};

/**
 * Describes the message devkit.v1.AuthLoginProviderResponse.
 * Use `create(AuthLoginProviderResponseSchema)` to create a new message.
 */
export declare const AuthLoginProviderResponseSchema: GenMessage<AuthLoginProviderResponse>;

/**
 * @generated from message devkit.v1.AuthLoginProviderCallbackRequest
 */
export declare type AuthLoginProviderCallbackRequest = Message<"devkit.v1.AuthLoginProviderCallbackRequest"> & {
  /**
   * @generated from field: string provider = 1;
   */
  provider: string;

  /**
   * @generated from field: string access_token = 2;
   */
  accessToken: string;
};

/**
 * Describes the message devkit.v1.AuthLoginProviderCallbackRequest.
 * Use `create(AuthLoginProviderCallbackRequestSchema)` to create a new message.
 */
export declare const AuthLoginProviderCallbackRequestSchema: GenMessage<AuthLoginProviderCallbackRequest>;

/**
 * @generated from message devkit.v1.AuthLoginProviderCallbackResponse
 */
export declare type AuthLoginProviderCallbackResponse = Message<"devkit.v1.AuthLoginProviderCallbackResponse"> & {
  /**
   * @generated from field: devkit.v1.AccountsSchemaUser user = 1;
   */
  user?: AccountsSchemaUser;

  /**
   * @generated from field: devkit.v1.LoginInfo login_info = 2;
   */
  loginInfo?: LoginInfo;

  /**
   * @generated from field: repeated devkit.v1.NavigationBarItem navigation_bar = 3;
   */
  navigationBar: NavigationBarItem[];
};

/**
 * Describes the message devkit.v1.AuthLoginProviderCallbackResponse.
 * Use `create(AuthLoginProviderCallbackResponseSchema)` to create a new message.
 */
export declare const AuthLoginProviderCallbackResponseSchema: GenMessage<AuthLoginProviderCallbackResponse>;

/**
 * @generated from message devkit.v1.AuthResetPasswordEmailRequest
 */
export declare type AuthResetPasswordEmailRequest = Message<"devkit.v1.AuthResetPasswordEmailRequest"> & {
  /**
   * @generated from field: string email = 1;
   */
  email: string;
};

/**
 * Describes the message devkit.v1.AuthResetPasswordEmailRequest.
 * Use `create(AuthResetPasswordEmailRequestSchema)` to create a new message.
 */
export declare const AuthResetPasswordEmailRequestSchema: GenMessage<AuthResetPasswordEmailRequest>;

/**
 * @generated from message devkit.v1.AuthResetPasswordEmailResponse
 */
export declare type AuthResetPasswordEmailResponse = Message<"devkit.v1.AuthResetPasswordEmailResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message devkit.v1.AuthResetPasswordEmailResponse.
 * Use `create(AuthResetPasswordEmailResponseSchema)` to create a new message.
 */
export declare const AuthResetPasswordEmailResponseSchema: GenMessage<AuthResetPasswordEmailResponse>;

/**
 * @generated from message devkit.v1.AuthResetPasswordRequest
 */
export declare type AuthResetPasswordRequest = Message<"devkit.v1.AuthResetPasswordRequest"> & {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: string new_password = 2;
   */
  newPassword: string;

  /**
   * @generated from field: string new_password_confirmation = 3;
   */
  newPasswordConfirmation: string;

  /**
   * @generated from field: string reset_token = 4;
   */
  resetToken: string;

  /**
   * @generated from field: string redirect_url = 5;
   */
  redirectUrl: string;
};

/**
 * Describes the message devkit.v1.AuthResetPasswordRequest.
 * Use `create(AuthResetPasswordRequestSchema)` to create a new message.
 */
export declare const AuthResetPasswordRequestSchema: GenMessage<AuthResetPasswordRequest>;

/**
 * @generated from message devkit.v1.AuthResetPasswordResponse
 */
export declare type AuthResetPasswordResponse = Message<"devkit.v1.AuthResetPasswordResponse"> & {
  /**
   * @generated from field: devkit.v1.AccountsSchemaUser user = 1;
   */
  user?: AccountsSchemaUser;

  /**
   * @generated from field: devkit.v1.LoginInfo login_info = 2;
   */
  loginInfo?: LoginInfo;

  /**
   * @generated from field: repeated devkit.v1.NavigationBarItem navigation_bar = 3;
   */
  navigationBar: NavigationBarItem[];
};

/**
 * Describes the message devkit.v1.AuthResetPasswordResponse.
 * Use `create(AuthResetPasswordResponseSchema)` to create a new message.
 */
export declare const AuthResetPasswordResponseSchema: GenMessage<AuthResetPasswordResponse>;

